Mcp name: GMAIL
Mcp Id: 686de5276fd1cae1afbb55be
Mcp Url: https://mcp.composio.dev/composio/server/64ddd793-75d0-4c3d-8abf-56c7554f19be/mcp?user_id=68fd3616f800d7824ea71723
Schema info:

Here is the input and output schema info of Tool GMAIL_ADD_LABEL_TO_EMAIL of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"add_label_ids":{"type":"array","description":"Label IDs to add. For custom labels, obtain IDs via 'listLabels'. System labels (e.g., 'INBOX', 'SPAM') can also be used.","title":"Add Label Ids","default":[],"items":{"type":"string","properties":{}},"examples":["STARRED","IMPORTANT","Label_123"]},"message_id":{"type":"string","description":"Immutable ID of the message to modify (e.g., from 'fetchEmails' or 'fetchMessagesByThreadId').","title":"Message Id","examples":["17f1b2b9c1b2a3d4"]},"remove_label_ids":{"type":"array","description":"Label IDs to remove. For custom labels, obtain IDs via 'listLabels'. System labels can also be used.","title":"Remove Label Ids","default":[],"items":{"type":"string","properties":{}},"examples":["UNREAD","Label_456"]},"user_id":{"type":"string","description":"User's email address or 'me' for the authenticated user.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["message_id"],"title":"AddLabelToEmailRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_data":{"type":"object","description":"Full `Message` resource with updated labels.","title":"Response Data","additionalProperties":true}},"required":["response_data"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"AddLabelToEmailResponseWrapper"}
schema info of GMAIL_ADD_LABEL_TO_EMAIL ends.


Here is the input and output schema info of Tool GMAIL_CREATE_EMAIL_DRAFT of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"attachment":{"title":"FileUploadable","description":"File to attach to the email.","format":"path","type":"string","file_uploadable":true},"bcc":{"type":"array","description":"'Bcc' (blind carbon copy) recipient email addresses.","title":"Bcc","default":[],"items":{"type":"string","properties":{}},"examples":[["bcc.recipient@example.com"]]},"body":{"type":"string","description":"Email body content (plain text or HTML); `is_html` must be True if HTML.","title":"Body","examples":["Hello Team,\n\nPlease find the attached report for your review.\n\nBest regards,\nYour Name","<h1>Meeting Confirmation</h1><p>This email confirms our meeting scheduled for next Tuesday.</p>"]},"cc":{"type":"array","description":"'Cc' (carbon copy) recipient email addresses.","title":"Cc","default":[],"items":{"type":"string","properties":{}},"examples":[["cc.recipient1@example.com","cc.recipient2@example.com"]]},"extra_recipients":{"type":"array","description":"Additional 'To' recipient email addresses.","title":"Extra Recipients","default":[],"items":{"type":"string","properties":{}},"examples":[["jane.doe@example.com","another.recipient@example.com"]]},"is_html":{"type":"boolean","description":"Set to True if `body` is HTML, otherwise the action may fail.","title":"Is Html","default":false,"examples":["True","False"]},"recipient_email":{"type":"string","description":"Primary recipient's email address.","title":"Recipient Email","examples":["john.doe@example.com"]},"subject":{"type":"string","description":"Email subject line.","title":"Subject","examples":["Project Update Q3","Meeting Reminder"]},"thread_id":{"type":"string","description":"ID of an existing Gmail thread to reply to; omit for new thread.","title":"Thread Id","default":null,"nullable":true,"examples":["17f45ec49a9c3f1b"]},"user_id":{"type":"string","description":"User's email address or 'me' for the authenticated user.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["recipient_email","subject","body"],"title":"CreateEmailDraftRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_data":{"type":"object","description":"Gmail API response with created draft details, including ID.","title":"Response Data","default":null,"nullable":true,"additionalProperties":true}},"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"CreateEmailDraftResponseWrapper"}
schema info of GMAIL_CREATE_EMAIL_DRAFT ends.


Here is the input and output schema info of Tool GMAIL_CREATE_LABEL of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"background_color":{"type":"string","description":"The background color of the label, in hex (e.g., \"#FFFFFF\").","title":"Background Color","default":null,"nullable":true,"examples":["#FFFFFF","#00FF00"]},"label_list_visibility":{"type":"string","description":"Controls how the label is displayed in the label list in the Gmail sidebar.","title":"Label List Visibility","default":"labelShow","examples":["labelShow","labelShowIfUnread","labelHide"]},"label_name":{"type":"string","description":"The name for the new label. Must be unique within the account, non-blank, maximum length 225 characters, cannot contain ',' or '/', not only whitespace, and must not be a reserved system label (e.g., INBOX, DRAFTS, SENT).","title":"Label Name","examples":["Work","Important Documents","Receipts 2024"]},"message_list_visibility":{"type":"string","description":"Controls how messages with this label are displayed in the message list.","title":"Message List Visibility","default":"show","examples":["show","hide"]},"text_color":{"type":"string","description":"The text color of the label, in hex (e.g., \"#000000\").","title":"Text Color","default":null,"nullable":true,"examples":["#000000","#FF0000"]},"user_id":{"type":"string","description":"The email address of the user in whose account the label will be created.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["label_name"],"title":"CreateLabelRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_data":{"type":"object","description":"Full API response from Gmail for the created label.","title":"Response Data","additionalProperties":true}},"required":["response_data"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"CreateLabelResponseWrapper"}
schema info of GMAIL_CREATE_LABEL ends.


Here is the input and output schema info of Tool GMAIL_DELETE_DRAFT of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"draft_id":{"type":"string","description":"Immutable ID of the draft to delete, typically obtained when the draft was created.","title":"Draft Id","examples":["r-8388446164079304564"]},"user_id":{"type":"string","description":"User's email address or 'me' for the authenticated user; 'me' is recommended.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["draft_id"],"title":"DeleteDraftRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"success":{"type":"boolean","description":"Indicates successful deletion; an exception is raised on error rather than returning false.","title":"Success"}},"required":["success"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"DeleteDraftResponseWrapper"}
schema info of GMAIL_DELETE_DRAFT ends.


Here is the input and output schema info of Tool GMAIL_DELETE_MESSAGE of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"message_id":{"type":"string","description":"Identifier of the email message to delete.","title":"Message Id","examples":["185120e4428ba8cf","17a872b77b9e7a3b"]},"user_id":{"type":"string","description":"User's email address. The special value 'me' refers to the authenticated user.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["message_id"],"title":"DeleteMessageRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"success":{"type":"boolean","description":"True if the message was successfully deleted.","title":"Success"}},"required":["success"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"DeleteMessageResponseWrapper"}
schema info of GMAIL_DELETE_MESSAGE ends.


Here is the input and output schema info of Tool GMAIL_FETCH_EMAILS of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"ids_only":{"type":"boolean","description":"If true, only returns message IDs from the list API without fetching individual message details. Fastest option for getting just message IDs and thread IDs.","title":"Ids Only","default":false,"examples":["True","False"]},"include_payload":{"type":"boolean","description":"Set to true to include full message payload (headers, body, attachments); false for metadata only.","title":"Include Payload","default":true,"examples":["True","False"]},"include_spam_trash":{"type":"boolean","description":"Set to true to include messages from 'SPAM' and 'TRASH'.","title":"Include Spam Trash","default":false,"examples":["True","False"]},"label_ids":{"type":"array","description":"Filter by label IDs; only messages with all specified labels are returned. Common IDs: 'INBOX', 'SPAM', 'TRASH', 'UNREAD', 'STARRED', 'IMPORTANT', 'CATEGORY_PRIMARY' (alias 'CATEGORY_PERSONAL'), 'CATEGORY_SOCIAL', 'CATEGORY_PROMOTIONS', 'CATEGORY_UPDATES', 'CATEGORY_FORUMS'. Use 'listLabels' action for custom IDs.","title":"Label Ids","items":{"type":"string","properties":{}}},"max_results":{"type":"integer","description":"Maximum number of messages to retrieve per page.","title":"Max Results","default":1,"minimum":1,"maximum":500,"examples":["10","100","500"]},"page_token":{"type":"string","description":"Token for retrieving a specific page, obtained from a previous response's `nextPageToken`. Omit for the first page.","title":"Page Token","default":null,"nullable":true},"query":{"type":"string","description":"Gmail advanced search query (e.g., 'from:user subject:meeting'). Supports operators like 'from:', 'to:', 'subject:', 'label:', 'has:attachment', 'is:unread', 'after:YYYY/MM/DD', 'before:YYYY/MM/DD', AND/OR/NOT. Use quotes for exact phrases. Omit for no query filter.","title":"Query","default":null,"nullable":true,"examples":["from:john@example.com is:unread","subject:meeting has:attachment","after:2024/01/01 before:2024/02/01","is:important OR is:starred","label:work -label:spam"]},"user_id":{"type":"string","description":"User's email address or 'me' for the authenticated user.","title":"User Id","default":"me","examples":["me","user@example.com"]},"verbose":{"type":"boolean","description":"If false, uses optimized concurrent metadata fetching for faster performance (~75% improvement). If true, uses standard detailed message fetching. When false, only essential fields (subject, sender, recipient, time, labels) are guaranteed.","title":"Verbose","default":true,"examples":["True","False"]}},"title":"FetchEmailsRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"messages":{"type":"array","description":"List of retrieved email messages. Includes full content if `include_payload` was true, otherwise metadata.","title":"Messages","items":{"type":"object","description":"This model represents the body a Gmail message.","title":"MessageBody","properties":{"attachmentList":{"type":"array","description":"The list of attachments","title":"Attachment List","nullable":true,"items":{"properties":{}}},"labelIds":{"type":"array","description":"The label IDs of the message","title":"Label Ids","nullable":true,"items":{"properties":{}}},"messageId":{"type":"string","description":"The message ID of the message","title":"Message Id","nullable":true},"messageText":{"type":"string","description":"The text of the message","title":"Message Text","nullable":true},"messageTimestamp":{"type":"string","description":"The timestamp of the message","title":"Message Timestamp","nullable":true},"payload":{"type":"object","description":"The payload of the message","title":"Payload","nullable":true,"additionalProperties":true},"preview":{"type":"object","description":"The preview of the message","title":"Preview","nullable":true,"additionalProperties":true},"sender":{"type":"string","description":"The sender of the message","title":"Sender","nullable":true},"subject":{"type":"string","description":"The subject of the message","title":"Subject","nullable":true},"threadId":{"type":"string","description":"The thread ID of the message","title":"Thread Id","nullable":true},"to":{"type":"string","description":"The recipient of the message","title":"To","nullable":true}}}},"nextPageToken":{"type":"string","description":"Token for the next page of results; use in subsequent `page_token` request. Empty if no more results.","title":"Next Page Token"},"resultSizeEstimate":{"type":"integer","description":"Estimated total messages matching the query (not just this page).","title":"Result Size Estimate"}},"required":["nextPageToken","resultSizeEstimate","messages"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"FetchEmailsResponseWrapper"}
schema info of GMAIL_FETCH_EMAILS ends.


Here is the input and output schema info of Tool GMAIL_FETCH_MESSAGE_BY_MESSAGE_ID of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"format":{"type":"string","description":"Format for message content: 'minimal' (ID/labels), 'full' (complete data), 'raw' (base64url string), 'metadata' (ID/labels/headers).","title":"Format","default":"full","examples":["minimal","full","raw","metadata"]},"message_id":{"type":"string","description":"Unique ID of the email message to retrieve, obtainable from actions like 'List Messages'.","title":"Message Id","minLength":1,"examples":["xsdfe3264vrfw"]},"user_id":{"type":"string","description":"User's email address or 'me' for the authenticated user.","title":"User Id","default":"me","examples":["user@example.com","me"]}},"required":["message_id"],"title":"FetchMessageByMessageIdRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"attachmentList":{"type":"array","description":"The list of attachments","title":"Attachment List","nullable":true,"items":{"properties":{}}},"labelIds":{"type":"array","description":"The label IDs of the message","title":"Label Ids","nullable":true,"items":{"properties":{}}},"messageId":{"type":"string","description":"The message ID of the message","title":"Message Id","nullable":true},"messageText":{"type":"string","description":"The text of the message","title":"Message Text","nullable":true},"messageTimestamp":{"type":"string","description":"The timestamp of the message","title":"Message Timestamp","nullable":true},"payload":{"type":"object","description":"The payload of the message","title":"Payload","nullable":true,"additionalProperties":true},"preview":{"type":"object","description":"The preview of the message","title":"Preview","nullable":true,"additionalProperties":true},"sender":{"type":"string","description":"The sender of the message","title":"Sender","nullable":true},"subject":{"type":"string","description":"The subject of the message","title":"Subject","nullable":true},"threadId":{"type":"string","description":"The thread ID of the message","title":"Thread Id","nullable":true},"to":{"type":"string","description":"The recipient of the message","title":"To","nullable":true}},"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"FetchMessageByMessageIdResponseWrapper"}
schema info of GMAIL_FETCH_MESSAGE_BY_MESSAGE_ID ends.


Here is the input and output schema info of Tool GMAIL_FETCH_MESSAGE_BY_THREAD_ID of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"page_token":{"type":"string","description":"Opaque page token for fetching a specific page of messages if results are paginated.","title":"Page Token","default":"","examples":["CiAKGhIKJdealEffectivelyPageToken"]},"thread_id":{"type":"string","description":"Unique ID of the thread, obtainable from actions like 'listThreads' or 'fetchEmails'.","title":"Thread Id","examples":["xsdfe3264vrfw"]},"user_id":{"type":"string","description":"The email address of the user.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["thread_id"],"title":"FetchMessageByThreadIdRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"messages":{"type":"array","description":"Retrieved messages from the thread.","title":"Messages","items":{"type":"object","description":"This model represents the body a Gmail message.","title":"MessageBody","properties":{"attachmentList":{"type":"array","description":"The list of attachments","title":"Attachment List","nullable":true,"items":{"properties":{}}},"labelIds":{"type":"array","description":"The label IDs of the message","title":"Label Ids","nullable":true,"items":{"properties":{}}},"messageId":{"type":"string","description":"The message ID of the message","title":"Message Id","nullable":true},"messageText":{"type":"string","description":"The text of the message","title":"Message Text","nullable":true},"messageTimestamp":{"type":"string","description":"The timestamp of the message","title":"Message Timestamp","nullable":true},"payload":{"type":"object","description":"The payload of the message","title":"Payload","nullable":true,"additionalProperties":true},"preview":{"type":"object","description":"The preview of the message","title":"Preview","nullable":true,"additionalProperties":true},"sender":{"type":"string","description":"The sender of the message","title":"Sender","nullable":true},"subject":{"type":"string","description":"The subject of the message","title":"Subject","nullable":true},"threadId":{"type":"string","description":"The thread ID of the message","title":"Thread Id","nullable":true},"to":{"type":"string","description":"The recipient of the message","title":"To","nullable":true}}}}},"required":["messages"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"FetchMessageByThreadIdResponseWrapper"}
schema info of GMAIL_FETCH_MESSAGE_BY_THREAD_ID ends.


Here is the input and output schema info of Tool GMAIL_GET_ATTACHMENT of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"attachment_id":{"type":"string","description":"ID of the attachment to retrieve.","title":"Attachment Id","examples":["A_PART0.1_18exampleAttachmentId7f9"]},"file_name":{"type":"string","description":"Desired filename for the downloaded attachment.","title":"File Name","examples":["invoice.pdf","report.docx"]},"message_id":{"type":"string","description":"Immutable ID of the message containing the attachment.","title":"Message Id","examples":["18exampleMessageId7f9"]},"user_id":{"type":"string","description":"User's email address ('me' for authenticated user).","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["message_id","attachment_id","file_name"],"title":"GetAttachmentRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"file":{"type":"object","description":"Retrieved attachment, prepared for download.","title":"File","properties":{"mimetype":{"type":"string","description":"Mime type of the file.","title":"Mimetype"},"name":{"type":"string","description":"Name of the file","title":"Name"},"s3url":{"type":"string","description":"URL of the file.","title":"S3Url"}},"required":["name","mimetype","s3url"],"file_downloadable":true,"additionalProperties":false}},"required":["file"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"GetAttachmentResponseWrapper"}
schema info of GMAIL_GET_ATTACHMENT ends.


Here is the input and output schema info of Tool GMAIL_GET_CONTACTS of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"include_other_contacts":{"type":"boolean","description":"Include 'Other Contacts' (interacted with but not explicitly saved) in addition to regular contacts; if true, fetches from both endpoints and merges results.","title":"Include Other Contacts","default":true},"page_token":{"type":"string","description":"Token to retrieve a specific page of results, obtained from 'nextPageToken' in a previous response.","title":"Page Token"},"person_fields":{"type":"string","description":"Comma-separated person fields to retrieve for each contact (e.g., 'names,emailAddresses').","title":"Person Fields","default":"emailAddresses,names,birthdays,genders","examples":["addresses","ageRanges","biographies","birthdays","coverPhotos","emailAddresses","events","genders","imClients","interests","locales","memberships","metadata","names","nicknames","occupations","organizations","phoneNumbers","photos","relations","residences","sipAddresses","skills","urls","userDefined"]},"resource_name":{"type":"string","description":"Identifier for the person resource whose connections are listed; use 'people/me' for the authenticated user.","title":"Resource Name","default":"people/me"}},"title":"GetContactsRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_data":{"type":"object","description":"Raw JSON response from the Google People API, typically containing a list of 'connections' (contacts) with requested 'personFields' and potentially a 'nextPageToken'.","title":"Response Data","additionalProperties":true}},"required":["response_data"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"GetContactsResponseWrapper"}
schema info of GMAIL_GET_CONTACTS ends.


Here is the input and output schema info of Tool GMAIL_GET_PEOPLE of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"other_contacts":{"type":"boolean","description":"If true, retrieves 'Other Contacts' (people interacted with but not explicitly saved), ignoring `resource_name` and enabling pagination/sync. If false, retrieves information for the single person specified by `resource_name`.","title":"Other Contacts","default":false},"page_size":{"type":"integer","description":"The number of 'Other Contacts' to return per page. Applicable only when `other_contacts` is true.","title":"Page Size","default":10,"minimum":1,"maximum":1000},"page_token":{"type":"string","description":"An opaque token from a previous response to retrieve the next page of 'Other Contacts' results. Applicable only when `other_contacts` is true and paginating.","title":"Page Token","default":""},"person_fields":{"type":"string","description":"A comma-separated field mask to restrict which fields on the person (or persons) are returned. Consult the Google People API documentation for a comprehensive list of valid fields.","title":"Person Fields","default":"emailAddresses,names,birthdays,genders","examples":["names,emailAddresses","emailAddresses,names,birthdays,genders","addresses,phoneNumbers,metadata"]},"resource_name":{"type":"string","description":"Resource name identifying the person for whom to retrieve information (like the authenticated user or a specific contact). Used only when `other_contacts` is false.","title":"Resource Name","default":"people/me","examples":["people/me","people/c12345678901234567890","people/102345678901234567890"]},"sync_token":{"type":"string","description":"A token from a previous 'Other Contacts' list call to retrieve only changes since the last sync; leave empty for an initial full sync. Applicable only when `other_contacts` is true.","title":"Sync Token","default":""}},"title":"GetPeopleRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"other_contacts":{"type":"object","description":"Contains the list of 'Other Contacts', potentially including tokens for pagination or future syncs. Populated when `other_contacts` is true.","title":"Other Contacts","default":{},"additionalProperties":true},"people_data":{"type":"object","description":"Contains the person's data as requested, populated when `other_contacts` is false and a single person is fetched.","title":"People Data","default":{},"additionalProperties":true}},"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"GetPeopleResponseWrapper"}
schema info of GMAIL_GET_PEOPLE ends.


Here is the input and output schema info of Tool GMAIL_GET_PROFILE of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"user_id":{"type":"string","description":"The email address of the Gmail user whose profile is to be retrieved, or the special value 'me' to indicate the currently authenticated user.","title":"User Id","default":"me","examples":["user@example.com","me"]}},"title":"GetProfileRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_data":{"type":"object","description":"The user's Gmail profile information. Key fields typically include 'emailAddress' (primary email), 'messagesTotal' (total messages), 'threadsTotal' (total threads), and 'historyId' (mailbox history ID).","title":"Response Data","additionalProperties":true}},"required":["response_data"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"GetProfileResponseWrapper"}
schema info of GMAIL_GET_PROFILE ends.


Here is the input and output schema info of Tool GMAIL_LIST_DRAFTS of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"max_results":{"type":"integer","description":"Maximum number of drafts to return per page.","title":"Max Results","default":1,"minimum":1,"maximum":500,"examples":[10,100,500]},"page_token":{"type":"string","description":"Token from a previous response to retrieve a specific page of drafts.","title":"Page Token","default":"","examples":["CiaKJDhWSE5UURE9PSIsImMiOiJhYmMxMjMifQ=="]},"user_id":{"type":"string","description":"User's mailbox ID; use 'me' for the authenticated user.","title":"User Id","default":"me","examples":["me","user@example.com"]},"verbose":{"type":"boolean","description":"If true, fetches full draft details including subject, sender, recipient, body, and timestamp. If false, returns only draft IDs (faster).","title":"Verbose","default":false,"examples":[true,false]}},"title":"ListDraftsRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"drafts":{"type":"array","description":"List of draft resources. When verbose=false: contains only 'id' and 'message' with minimal data. When verbose=true: contains full draft details including subject, sender, body, etc.","title":"Drafts","items":{"type":"object","properties":{},"additionalProperties":true}},"next_page_token":{"type":"string","description":"Token for fetching the next page of drafts, if more are available.","title":"Next Page Token","default":null,"nullable":true}},"required":["drafts"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"ListDraftsResponseWrapper"}
schema info of GMAIL_LIST_DRAFTS ends.


Here is the input and output schema info of Tool GMAIL_LIST_LABELS of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"user_id":{"type":"string","description":"Identifies the Gmail account (owner's email or 'me' for authenticated user) for which labels will be listed.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"title":"ListLabelsRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"labels":{"type":"array","description":"Retrieved label resources, each providing `id`, `name`, `type` ('system'/'user'), `messageListVisibility` (message list visibility), and `labelListVisibility` (label list visibility).","title":"Labels","items":{"properties":{}}}},"required":["labels"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"ListLabelsResponseWrapper"}
schema info of GMAIL_LIST_LABELS ends.


Here is the input and output schema info of Tool GMAIL_LIST_THREADS of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"max_results":{"type":"integer","description":"Maximum number of threads to return.","title":"Max Results","default":10,"minimum":1,"maximum":500,"examples":["10","50","100"]},"page_token":{"type":"string","description":"Token from a previous response to retrieve a specific page of results; omit for the first page.","title":"Page Token","default":"","examples":["abcPageToken123"]},"query":{"type":"string","description":"Filter for threads, using Gmail search query syntax (e.g., 'from:user@example.com is:unread').","title":"Query","default":"","examples":["is:unread","from:john.doe@example.com","subject:important"]},"user_id":{"type":"string","description":"The user's email address or 'me' to specify the authenticated Gmail account.","title":"User Id","default":"me","examples":["me","user@example.com"]},"verbose":{"type":"boolean","description":"If false, returns threads with basic fields (id, snippet, historyId). If true, returns threads with complete message details including headers, body, attachments, and metadata for each message in the thread.","title":"Verbose","default":false,"examples":["True","False"]}},"title":"ListThreadsRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"next_page_token":{"type":"string","description":"Token for the next page of results; if present, use as `page_token` in a subsequent request to fetch more threads.","title":"Next Page Token","default":null,"nullable":true},"threads":{"type":"array","description":"List of email thread resources, each usually containing 'id', 'snippet', and 'historyId'.","title":"Threads","items":{"properties":{}}}},"required":["threads"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"ListThreadsResponseWrapper"}
schema info of GMAIL_LIST_THREADS ends.


Here is the input and output schema info of Tool GMAIL_MODIFY_THREAD_LABELS of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"add_label_ids":{"type":"array","description":"List of label IDs to add to the thread; these labels must exist.","title":"Add Label Ids","default":null,"nullable":true,"items":{"type":"string","properties":{}},"examples":["STARRED","INBOX"]},"remove_label_ids":{"type":"array","description":"List of label IDs to remove from the thread; these labels must exist.","title":"Remove Label Ids","default":null,"nullable":true,"items":{"type":"string","properties":{}},"examples":["IMPORTANT","CATEGORY_UPDATES"]},"thread_id":{"type":"string","description":"Immutable ID of the thread to modify.","title":"Thread Id","examples":["18ea7715b619f09c"]},"user_id":{"type":"string","description":"User's email address or 'me' for the authenticated user.","title":"User Id","default":"me","examples":["user@example.com","me"]}},"required":["thread_id"],"title":"ModifyThreadLabelsRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_dict":{"type":"object","description":"Full Thread resource from the Gmail API as a dictionary, representing the thread's state after modification.","title":"Response Dict","additionalProperties":true},"success":{"type":"boolean","description":"Indicates whether the labels were successfully modified on the thread.","title":"Success"}},"required":["success","response_dict"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"ModifyThreadLabelsResponseWrapper"}
schema info of GMAIL_MODIFY_THREAD_LABELS ends.


Here is the input and output schema info of Tool GMAIL_MOVE_TO_TRASH of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"message_id":{"type":"string","description":"Identifier of the email message to move to trash.","title":"Message Id","examples":["1875f42779f726f2"]},"user_id":{"type":"string","description":"User's email address or 'me' for the authenticated user.","title":"User Id","default":"me","examples":["user@example.com","me"]}},"required":["message_id"],"title":"MoveToTrashRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"email":{"type":"object","description":"The Message resource that was moved to trash, including ID, thread ID, and 'TRASH' in label IDs.","title":"Email","additionalProperties":true}},"required":["email"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"MoveToTrashResponseWrapper"}
schema info of GMAIL_MOVE_TO_TRASH ends.


Here is the input and output schema info of Tool GMAIL_PATCH_LABEL of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"color":{"type":"object","description":"The color to assign to the label. Color is only available for labels that have their `type` set to `user`.","title":"PatchLabelColor","default":null,"nullable":true,"properties":{"backgroundColor":{"type":"string","description":"The background color of the label, represented as a hex string. Must be one of Gmail's predefined colors from the color palette. See: https://developers.google.com/workspace/gmail/api/guides/labels#color_palette","title":"Background Color","default":null,"nullable":true,"examples":["#ffffff","#f3f3f3","#efefef","#cccccc"]},"textColor":{"type":"string","description":"The text color of the label, represented as a hex string. Must be one of Gmail's predefined colors from the color palette. See: https://developers.google.com/workspace/gmail/api/guides/labels#color_palette","title":"Text Color","default":null,"nullable":true,"examples":["#000000","#434343","#666666","#ffffff"]}},"additionalProperties":false},"id":{"type":"string","description":"The ID of the label to update.","title":"Id","examples":["LABEL_123"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Gmail web interface.","title":"Label List Visibility","default":null,"nullable":true,"examples":["labelShow","labelShowIfUnread","labelHide"]},"messageListVisibility":{"type":"string","description":"The visibility of messages with this label in the message list in the Gmail web interface.","title":"Message List Visibility","default":null,"nullable":true,"examples":["show","hide"]},"name":{"type":"string","description":"The display name of the label.","title":"Name","default":null,"nullable":true,"examples":["My Updated Label"]},"userId":{"type":"string","description":"The user's email address. The special value `me` can be used to indicate the authenticated user.","title":"User Id","examples":["me","user@example.com"]}},"required":["userId","id"],"title":"PatchLabelRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"color":{"type":"object","description":"The color assigned to the label.","title":"PatchLabelColor","default":null,"nullable":true,"properties":{"backgroundColor":{"type":"string","description":"The background color of the label, represented as a hex string. Must be one of Gmail's predefined colors from the color palette. See: https://developers.google.com/workspace/gmail/api/guides/labels#color_palette","title":"Background Color","default":null,"nullable":true,"examples":["#ffffff","#f3f3f3","#efefef","#cccccc"]},"textColor":{"type":"string","description":"The text color of the label, represented as a hex string. Must be one of Gmail's predefined colors from the color palette. See: https://developers.google.com/workspace/gmail/api/guides/labels#color_palette","title":"Text Color","default":null,"nullable":true,"examples":["#000000","#434343","#666666","#ffffff"]}},"additionalProperties":false},"id":{"type":"string","description":"The immutable ID of the label.","title":"Id"},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Gmail web interface.","title":"Label List Visibility","default":null,"nullable":true},"messageListVisibility":{"type":"string","description":"The visibility of messages with this label in the message list in the Gmail web interface.","title":"Message List Visibility","default":null,"nullable":true},"messagesTotal":{"type":"integer","description":"The total number of messages with this label.","title":"Messages Total","default":null,"nullable":true},"messagesUnread":{"type":"integer","description":"The number of unread messages with this label.","title":"Messages Unread","default":null,"nullable":true},"name":{"type":"string","description":"The display name of the label.","title":"Name","default":null,"nullable":true},"threadsTotal":{"type":"integer","description":"The total number of threads with this label.","title":"Threads Total","default":null,"nullable":true},"threadsUnread":{"type":"integer","description":"The number of unread threads with this label.","title":"Threads Unread","default":null,"nullable":true},"type":{"type":"string","description":"The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread.","title":"Type","default":null,"nullable":true}},"required":["id"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"LabelResponseWrapper"}
schema info of GMAIL_PATCH_LABEL ends.


Here is the input and output schema info of Tool GMAIL_REMOVE_LABEL of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"label_id":{"type":"string","description":"ID of the user-created label to be permanently deleted; must exist and not be a system label.","title":"Label Id","examples":["Label_123","Label_xyz789"]},"user_id":{"type":"string","description":"User's email address or 'me' for the authenticated user.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["label_id"],"title":"RemoveLabelRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"success":{"type":"boolean","description":"True if the label deletion was successful (e.g., API returned 204 status).","title":"Success"}},"required":["success"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"RemoveLabelResponseWrapper"}
schema info of GMAIL_REMOVE_LABEL ends.


Here is the input and output schema info of Tool GMAIL_REPLY_TO_THREAD of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"attachment":{"title":"FileUploadable","description":"File to attach to the reply. Just Provide file path here","format":"path","type":"string","file_uploadable":true},"bcc":{"type":"array","description":"BCC recipients' email addresses (hidden from other recipients).","title":"Bcc","default":[],"items":{"type":"string","properties":{}},"examples":[["bcc.recipient@example.com"]]},"cc":{"type":"array","description":"CC recipients' email addresses.","title":"Cc","default":[],"items":{"type":"string","properties":{}},"examples":[["cc.recipient1@example.com","cc.recipient2@example.com"]]},"extra_recipients":{"type":"array","description":"Additional 'To' recipients' email addresses.","title":"Extra Recipients","default":[],"items":{"type":"string","properties":{}},"examples":[["jane.doe@example.com","another.person@example.com"]]},"is_html":{"type":"boolean","description":"Indicates if `message_body` is HTML; if True, body must be valid HTML, if False, body should not contain HTML tags.","title":"Is Html","default":false,"examples":["True","False"]},"message_body":{"type":"string","description":"Content of the reply message, either plain text or HTML.","title":"Message Body","examples":["Dear Sir, Nice talking to you. Yours respectfully, John"]},"recipient_email":{"type":"string","description":"Primary recipient's email address.","title":"Recipient Email","examples":["john@doe.com"]},"thread_id":{"type":"string","description":"Identifier of the Gmail thread for the reply.","title":"Thread Id","examples":["x53r3vdevff"]},"user_id":{"type":"string","description":"Identifier for the user sending the reply; 'me' refers to the authenticated user.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["thread_id","message_body","recipient_email"],"title":"ReplyToThreadRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_data":{"type":"object","description":"Raw response data from the Gmail API after sending the reply, typically including the sent message's ID.","title":"Response Data","additionalProperties":true}},"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"ReplyToThreadResponseWrapper"}
schema info of GMAIL_REPLY_TO_THREAD ends.


Here is the input and output schema info of Tool GMAIL_SEARCH_PEOPLE of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"other_contacts":{"type":"boolean","description":"Include 'Other Contacts' (interacted with but not explicitly saved) in search results; if false, searches only primary contacts.","title":"Other Contacts","default":true},"pageSize":{"type":"integer","description":"Maximum results to return; values >30 are capped to 30 by the API.","title":"Page Size","default":10,"minimum":0,"maximum":30},"person_fields":{"type":"string","description":"Comma-separated fields to return (e.g., 'names,emailAddresses'); see PersonFields enum. If 'other_contacts' is true, only 'emailAddresses', 'names', 'phoneNumbers' are allowed.","title":"Person Fields","default":"emailAddresses,names,phoneNumbers","examples":["addresses","ageRanges","biographies","birthdays","coverPhotos","emailAddresses","events","genders","imClients","interests","locales","memberships","metadata","names","nicknames","occupations","organizations","phoneNumbers","photos","relations","residences","sipAddresses","skills","urls","userDefined"]},"query":{"type":"string","description":"Matches contact names, nicknames, email addresses, phone numbers, and organization fields.","title":"Query"}},"required":["query"],"title":"SearchPeopleRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_data":{"type":"object","description":"Raw JSON response from the People API; structure may vary if 'other_contacts' was searched.","title":"Response Data","additionalProperties":true}},"required":["response_data"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"SearchPeopleResponseWrapper"}
schema info of GMAIL_SEARCH_PEOPLE ends.


Here is the input and output schema info of Tool GMAIL_SEND_DRAFT of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"draft_id":{"type":"string","description":"The ID of the draft to send.","title":"Draft Id","examples":["r-xxxxxxxxxxxxxxxxx"]},"user_id":{"type":"string","description":"The user's email address. The special value `me` can be used to indicate the authenticated user.","title":"User Id","default":"me","examples":["me","user@example.com"]}},"required":["draft_id"],"title":"SendDraftRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"id":{"type":"string","description":"The immutable ID of the sent message.","title":"Id","default":null,"nullable":true},"labelIds":{"type":"array","description":"List of IDs of labels applied to this message.","title":"Label Ids","default":null,"nullable":true,"items":{"type":"string","properties":{}}},"raw":{"type":"string","description":"The entire email message in RFC 2822 format.","title":"Raw","default":null,"nullable":true},"snippet":{"type":"string","description":"A short part of the message text.","title":"Snippet","default":null,"nullable":true},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","title":"Thread Id","default":null,"nullable":true}},"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"SendDraftResponseWrapper"}
schema info of GMAIL_SEND_DRAFT ends.


Here is the input and output schema info of Tool GMAIL_SEND_EMAIL of Mcp GMAIL (Mcp Id: 686de5276fd1cae1afbb55be):
inputSchema:
{"type":"object","properties":{"attachment":{"title":"FileUploadable","description":"File to attach; ensure `s3key`, `mimetype`, and `name` are set if provided. Omit or set to null for no attachment.","format":"path","type":"string","file_uploadable":true},"bcc":{"type":"array","description":"Blind Carbon Copy (BCC) recipients' email addresses.","title":"Bcc","default":[],"items":{"type":"string","properties":{}},"examples":[["auditor@example.com"]]},"body":{"type":"string","description":"Email content (plain text or HTML); if HTML, `is_html` must be `True`.","title":"Body","examples":["Hello team, let's discuss the project updates tomorrow.","<h1>Welcome!</h1><p>Thank you for signing up.</p>"]},"cc":{"type":"array","description":"Carbon Copy (CC) recipients' email addresses.","title":"Cc","default":[],"items":{"type":"string","properties":{}},"examples":[["manager@example.com","teamlead@example.com"]]},"extra_recipients":{"type":"array","description":"Additional 'To' recipients' email addresses (not Cc or Bcc).","title":"Extra Recipients","default":[],"items":{"type":"string","properties":{}},"examples":[["jane.doe@example.com","support@example.com"]]},"is_html":{"type":"boolean","description":"Set to `True` if the email body contains HTML tags.","title":"Is Html","default":false},"recipient_email":{"type":"string","description":"Primary recipient's email address.","title":"Recipient Email","examples":["john@doe.com"]},"subject":{"type":"string","description":"Subject line of the email.","title":"Subject","default":null,"nullable":true,"examples":["Project Update Meeting","Your Weekly Newsletter"]},"user_id":{"type":"string","description":"User's email address; the literal 'me' refers to the authenticated user.","title":"User Id","default":"me","examples":["user@example.com","me"]}},"required":["recipient_email","body"],"title":"SendEmailRequest"}
outputSchema:
{"type":"object","properties":{"data":{"type":"object","description":"Data from the action execution","title":"Data","properties":{"response_data":{"type":"object","description":"Gmail API response, typically including the sent message ID and threadId.","title":"Response Data","additionalProperties":true}},"required":["response_data"],"additionalProperties":false},"error":{"type":"string","description":"Error if any occurred during the execution of the action","title":"Error","default":null,"nullable":true},"successful":{"type":"boolean","description":"Whether or not the action execution was successful or not","title":"Successful"}},"required":["data","successful"],"title":"SendEmailResponseWrapper"}
schema info of GMAIL_SEND_EMAIL ends.

